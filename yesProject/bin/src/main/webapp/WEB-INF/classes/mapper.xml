<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="review">
    <resultMap id="reviewVo" type="com.bit.yes.model.entity.ReviewVo">
	<result property="idx" column="IDX"/>
	<result property="title" column="TITLE"/>
	<result property="content" column="CONTENT"/>
	<result property="calendar" column="CALENDAR"/>
</resultMap>

<!-- review 전체 list -->

	  	<select id ="writeGetCount" parameterType="hashmap" resultType="int">
	  		select count(*) from review 
	  		<choose>
	  			<when test="category == 'location'">
	  				where branchID=(select id from branch_address where roadAddress like '%${keyword}%' or jibunAddress like '%${keyword}%')
	  			</when>
	  			<when test='category == "store"'>
	  				where branchID=(select distinct id from branch_info where branchname like '%${keyword}%')
	  			</when>
	  			<when test='category == "menu"'>
	  				where branchID = (select distinct id from branch_menu where menu like '%${keyword}%')
	  			</when>
	  		</choose>
	  	</select>
	<!-- 게시글 조회를 위한 쿼리 (값을 받아와서 해당 하단 페이지 버튼의 레코드 출력) -->  	
  		<select id="writeList" parameterType="hashmap" resultMap="reviewVo">
  			select * from review
  			<choose>
	  			<when test="category == 'location'">
	  				where branchID=(select id from branch_address where roadAddress like '%${keyword}%' or jibunAddress like '%${keyword}%')
	  			</when>
	  			<when test='category == "store"'>
	  				where branchID=(select distinct id from branch_info where branchname like '%${keyword}%')
	  			</when>
	  			<when test='category == "menu"'>
	  				where branchID = (select distinct id from branch_menu where menu like '%${keyword}%')
	  			</when>
	  		</choose>
  			 order by review.idx DESC limit #{offset}, #{noOfRecords}
  		</select>
  		
  		<select id ="writeInfoList" parameterType="hashmap" resultMap = "reviewVo">
  			select * from review where info = 1
  			<choose>
	  			<when test="category == 'location'">
	  				and where branchID=(select id from branch_address where roadAddress like '%${keyword}%' or jibunAddress like '%${keyword}%')
	  			</when>
	  			<when test='category == "store"'>
	  				and where branchID=(select distinct id from branch_info where branchname like '%${keyword}%')
	  			</when>
	  			<when test='category == "menu"'>
	  				and where branchID = (select distinct id from branch_menu where menu like '%${keyword}%')
	  			</when>
	  		</choose>
  			 order by review.idx DESC
  		</select>
  		
<!-- 	  	<select id ="writeGetCount" resultType="int">
	  		select count(*) from review
	  	</select>
	게시글 조회를 위한 쿼리 (값을 받아와서 해당 하단 페이지 버튼의 레코드 출력)  	
  		<select id="writeList" parameterType="hashmap" resultMap="reviewVo">
  			select * from review order by review.idx DESC limit #{offset}, #{noOfRecords}
  		</select>
  		
  		<select id ="writeInfoList" resultMap = "reviewVo">
  			select * from review where info = 1 order by review.idx DESC
  		</select> -->
  
 <!--  -->
  
  <!--user추가  -->
<!--   <select id="reviewList" resultType="com.bit.yes.model.entity.ReviewVo">
  	select * from review
  </select> -->
  
  <select id="reviewListImage" parameterType="hashMap" resultType="com.bit.yes.model.entity.ImageVo">
  	select * from review_images where imageName like 'm_%'
  		<choose>
  			<when test="category =='location'">
  				and idx in (select idx from review where branchID=(select id from branch_address where roadAddress like '%${keyword}%' or jibunAddress like '%${keyword}%'))
  			</when>
  			<when test="category =='store'">
  				and idx in (select idx from review where branchID=(select distinct id from branch_info where branchname like '%${keyword}%'))
  			</when>
  			<when test="category =='menu'">
  				and idx in (select idx from review where branchID= (select distinct id from branch_menu where menu like '%${keyword}%'))
  			</when>
  		</choose>
  	 order by idx desc
  </select>
  
  <select id="reviewSubImage" resultType="com.bit.yes.model.entity.ImageVo">
  	select * from review_images where not imageName like 'm_%' and idx=#{val}
  </select>
  
  <select id="reviewMainImage" resultType="com.bit.yes.model.entity.ImageVo">
  	select * from review_images where imageName like 'm_%' and idx=#{val}
  </select>
  
  <select id="reviewSelect" resultType="com.bit.yes.model.entity.ReviewVo">
  	select * from review where idx=#{val}
  </select>
  
  <delete id="reviewDelete" parameterType="int">
  	delete from review where idx=#{val};
  </delete>
  
  <delete id="reviewDeleteFile" parameterType="int">
  	delete from review_images where idx=#{val};
  </delete>
  
  <insert id="reviewWrite" parameterType="com.bit.yes.model.entity.ReviewVo">
  	insert into review (branchID, clientID, title, content, calendar, rating)
  	 values(#{branchID}, #{clientID}, #{title}, #{content}, current_timestamp(), #{rating})
  </insert>
  
  <insert id="reviewImgUpload" parameterType="com.bit.yes.model.entity.ImageVo">
  	insert into review_images values ((select max(idx) from review), #{imageName})
  </insert>
  
  <update id="reviewEdit" parameterType="com.bit.yes.model.entity.ReviewVo">
  	update review set title=#{title}, rating=${rating}, content=#{content} where idx=#{idx}
  </update>
  
<!--   	<select id="selectAll" resultType="com.bit.myapp06.model.entity.GuestVo">
  	SELECT * FROM GUEST ORDER BY SABUN DESC
  	</select>
  	
  	<select id="selectOne" parameterType="int" resultType="com.bit.myapp06.model.entity.GuestVo">
  	SELECT * FROM GUEST WHERE SABUN=#{value}
  	</select>
  	
  	<update id="updateOne" parameterType="com.bit.myapp06.model.entity.GuestVo">
  	UPDATE GUEST SET NAME=#{name},PAY=#{pay} WHERE SABUN=#{sabun}
  	</update>
  
  	<delete id="deleteOne" parameterType="int">
  	DELETE FROM GUEST WHERE SABUN=#{value}
  	</delete> -->
  </mapper>